//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjektWpf.ObliczServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ObliczServiceReference.IObliczService")]
    public interface IObliczService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/srednieSpalanie", ReplyAction="http://tempuri.org/IObliczService/srednieSpalanieResponse")]
        double srednieSpalanie(double paliwo, double km);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/srednieSpalanie", ReplyAction="http://tempuri.org/IObliczService/srednieSpalanieResponse")]
        System.Threading.Tasks.Task<double> srednieSpalanieAsync(double paliwo, double km);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/koszt1km", ReplyAction="http://tempuri.org/IObliczService/koszt1kmResponse")]
        double koszt1km(double paliwo, double km, double cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/koszt1km", ReplyAction="http://tempuri.org/IObliczService/koszt1kmResponse")]
        System.Threading.Tasks.Task<double> koszt1kmAsync(double paliwo, double km, double cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/koszt100km", ReplyAction="http://tempuri.org/IObliczService/koszt100kmResponse")]
        double koszt100km(double paliwo, double km, double cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/koszt100km", ReplyAction="http://tempuri.org/IObliczService/koszt100kmResponse")]
        System.Threading.Tasks.Task<double> koszt100kmAsync(double paliwo, double km, double cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/kosztXkm", ReplyAction="http://tempuri.org/IObliczService/kosztXkmResponse")]
        double kosztXkm(double paliwo, double km, double cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObliczService/kosztXkm", ReplyAction="http://tempuri.org/IObliczService/kosztXkmResponse")]
        System.Threading.Tasks.Task<double> kosztXkmAsync(double paliwo, double km, double cena);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IObliczServiceChannel : ProjektWpf.ObliczServiceReference.IObliczService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObliczServiceClient : System.ServiceModel.ClientBase<ProjektWpf.ObliczServiceReference.IObliczService>, ProjektWpf.ObliczServiceReference.IObliczService {
        
        public ObliczServiceClient() {
        }
        
        public ObliczServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ObliczServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObliczServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObliczServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double srednieSpalanie(double paliwo, double km) {
            return base.Channel.srednieSpalanie(paliwo, km);
        }
        
        public System.Threading.Tasks.Task<double> srednieSpalanieAsync(double paliwo, double km) {
            return base.Channel.srednieSpalanieAsync(paliwo, km);
        }
        
        public double koszt1km(double paliwo, double km, double cena) {
            return base.Channel.koszt1km(paliwo, km, cena);
        }
        
        public System.Threading.Tasks.Task<double> koszt1kmAsync(double paliwo, double km, double cena) {
            return base.Channel.koszt1kmAsync(paliwo, km, cena);
        }
        
        public double koszt100km(double paliwo, double km, double cena) {
            return base.Channel.koszt100km(paliwo, km, cena);
        }
        
        public System.Threading.Tasks.Task<double> koszt100kmAsync(double paliwo, double km, double cena) {
            return base.Channel.koszt100kmAsync(paliwo, km, cena);
        }
        
        public double kosztXkm(double paliwo, double km, double cena) {
            return base.Channel.kosztXkm(paliwo, km, cena);
        }
        
        public System.Threading.Tasks.Task<double> kosztXkmAsync(double paliwo, double km, double cena) {
            return base.Channel.kosztXkmAsync(paliwo, km, cena);
        }
    }
}
